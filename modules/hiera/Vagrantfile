# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
	config.vm.box = "puppetlabs/centos-6.6-64-puppet"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  	config.vm.synced_folder "../", 	"/etc/puppet/modules"
  #	config.vm.synced_folder "templates", "/tmp/vagrant-puppet-3/templates"

  # Enable provisioning with Puppet stand alone.  Puppet manifests
  # are contained in a directory path relative to this Vagrantfile.
  # You will need to create the manifests directory and a manifest in
  # the file default.pp in the manifests_path directory.
  #
	config.vm.provision "puppet" do |puppet|
		puppet.manifests_path = "manifests"
	 	puppet.manifest_file  = "init.pp"
  		puppet.options = ["--templatedir","/tmp/vagrant-puppet-3/templates"]
	end
		
  config.vm.define "CentOS_7_test" do |centos7|
  	centos7.vm.box = "puppetlabs/centos-7.0-64-puppet"
  	centos7.vm.box_version = "1.0.1"
  	centos7.vm.box_check_update = false
  end

  config.vm.define "CentOS_6_test" do |centos6|
  	centos6.vm.box = "puppetlabs/centos-6.6-64-puppet"
  	centos6.vm.box_version = "1.0.1"
  	centos6.vm.box_check_update = false
  end

  config.vm.define "Ubuntu_15_test" do |ubuntu|
    ubuntu.vm.box = "ubuntu/wily64"
    ubuntu.vm.box_check_update = false
  end

end
