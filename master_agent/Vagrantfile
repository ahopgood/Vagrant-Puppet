# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
	#All VMs will inherit the puppet labs box and the manifests folder
	config.vm.box = "puppetlabs/centos-6.6-64-puppet"
	config.vm.synced_folder "manifests", "/puppet_data"
	config.vm.box_check_update = false
	
	config.vm.define "master" do |puppet_master|
		puppet_master.vm.network "private_network", ip: "192.168.33.10"
		puppet_master.vm.hostname = "puppet"
		puppet_master.vm.synced_folder "../modules",	"/etc/puppet/modules"
		puppet_master.vm.synced_folder ".",			"/tmp/vagrant-puppet-3/files"
		puppet_master.vm.synced_folder "manifests",	"/etc/puppet/manifests"
		puppet_master.vm.provision "puppet" do |puppet|
			puppet.manifests_path	= "manifests"
			puppet.manifest_file	= "init.pp"
		end
	end

	config.vm.define "agent" do |agent|
		agent.vm.network "private_network", ip:"192.168.33.13"
		agent.vm.hostname = "agent.vm"
		agent.vm.provision "puppet_server" do |puppet|
			puppet.puppet_node = "agent.vm"
			puppet.puppet_server = "192.168.33.10"
			#puppet.manifests_path 	= "manifests"
			#puppet.manifest_file	= "agent.pp"
		end
	end

#	config.vm.define "agentdb" do |agentdb|
#		agentdb.vm.network "private_network", ip: "192.168.33.11"
#		agentdb.vm.hostname = "agentdb.vm"
#		agentdb.vm.synced_folder "../modules",	"/etc/puppet/modules"
#		agentdb.vm.provision "puppet" do |puppet|
#			puppet.manifests_path	= "manifests"
#			puppet.manifest_file	= "site.pp"
#		end
#	end
	
#	config.vm.define "agentweb" do |agentweb|
#		agentweb.vm.network "private_network", ip: "192.168.33.12"
#		agentweb.vm.hostname = "agentweb.vm"
#		agentweb.vm.synced_folder "../modules",	"/etc/puppet/modules"
#		agentweb.vm.network "forwarded_port", guest: 8080, host: 8081	#Required for tomcat 8080 port forwarding
#		agentweb.vm.provision "puppet" do |puppet|
#			puppet.manifests_path	= "manifests"
#			puppet.manifest_file	= "agent.pp"
#		end
#	end
	
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  # config.vm.box = "base"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Don't boot with headless mode
  #   vb.gui = true
  #
  #   # Use VBoxManage to customize the VM. For example to change memory:
  #   vb.customize ["modifyvm", :id, "--memory", "1024"]
  # end
  #
  # View the documentation for the provider you're using for more
  # information on available options.


end
